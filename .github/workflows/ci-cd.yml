name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    permissions:
      contents: read # for checkout
      packages: write # for pushing packages to GHCR
      # id-token: write # for OIDC if used for login, not strictly needed for PAT/GITHUB_TOKEN

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetches all history for all tags and branches, useful for versioning

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21' # Specify your Go version

      - name: Run tests
        run: go test ./...

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/discord2pushover
          tags: |
            type=sha,prefix=
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Login to GitHub Container Registry
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # It's good practice to build with version info.
          # This requires your Go application to be able to accept these at build time.
          # Example: -X main.Version=${{ steps.meta.outputs.version }} (if using git tag for version)
          # For now, we'll use the commit SHA.
          build-args: |
            Version=${{ github.sha }}
            Commit=${{ github.sha }}
            Date=$(date -u +'%Y-%m-%dT%H:%M:%SZ')
